<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="macs-MacBook-Pro.local" failures="0" tests="3" name="com.betika.test_cases.RegistrationTest" time="3.274" errors="2" timestamp="2023-12-13T00:13:21 WAT" skipped="0">
  <testcase classname="com.betika.test_cases.RegistrationTest" name="invalidPhoneNumber" time="0.000">
    <error message="
Method public void com.betika.test_cases.RegistrationTest.invalidPhoneNumber(java.util.HashMap) requires a @DataProvider named : getInValidData in class Listeners.Parameterss" type="org.testng.TestNGException">
      <![CDATA[org.testng.TestNGException: 
Method public void com.betika.test_cases.RegistrationTest.invalidPhoneNumber(java.util.HashMap) requires a @DataProvider named : getInValidData in class Listeners.Parameterss
at org.testng.internal.Parameters.findDataProvider(Parameters.java:526)
at org.testng.internal.Parameters.handleParameters(Parameters.java:763)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:924)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
    </error>
  </testcase> <!-- invalidPhoneNumber -->
  <system-out/>
  <testcase classname="com.betika.test_cases.RegistrationTest" name="existingPhoneNumber" time="0.000">
    <error message="
Method public void com.betika.test_cases.RegistrationTest.existingPhoneNumber(java.lang.String) requires a @DataProvider named : getExistingPhoneNumberData in class Listeners.Parameterss" type="org.testng.TestNGException">
      <![CDATA[org.testng.TestNGException: 
Method public void com.betika.test_cases.RegistrationTest.existingPhoneNumber(java.lang.String) requires a @DataProvider named : getExistingPhoneNumberData in class Listeners.Parameterss
at org.testng.internal.Parameters.findDataProvider(Parameters.java:526)
at org.testng.internal.Parameters.handleParameters(Parameters.java:763)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:924)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
    </error>
  </testcase> <!-- existingPhoneNumber -->
  <system-out/>
  <testcase classname="com.betika.test_cases.RegistrationTest" name="successfulRegistration" time="3.274"/>
  <system-out/>
</testsuite> <!-- com.betika.test_cases.RegistrationTest -->
